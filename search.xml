<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[python笔记]]></title>
    <url>%2F2019%2F07%2F27%2Fpython%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[前言在大二这年的暑假，我开始自学python，教材是b站的视频《Python教程_600集Python从入门到精通教程（懂中文就能学会）》（具体视频链接放在附录中），这篇博客是对我学到的内容的归纳和总结，以及记录一些我在学习Python中所遇到的问题及解决办法。因为开始写这个博客的时间比较晚，所以前面三百个视频的学习经过以及遇到的问题就不记录了，这篇笔记是从第305个视频开始的，准备做个名片管理系统，并且我想笔记将会以日记方式呈现。 正文2019.7.291、三种高级数据类型，列表、元组、字典，想通过index/key取值时用的是[],其他的都会报错 ，一定要注意，这个错误我检查了好久2、\t在python中是一个非常常用的转义字符，横向制表符，我觉得就是相当于几个空格3、#!：shebang。将其添加在python文件的第一行，后面跟上python解释器的路径，这样该文件就变成可执行文件了。要注意的是在Linux系统中想要将其变成可执行文件还要修改权限。 1$ chmod +x xxxxx.py 2019.7.311、在python中变量和数据是分开存储的。数据存在内存中;而变量用于存储对应数据在内存中的存储地址,这就称之为引用。我们可以通过id()函数来查询数据的存储位置或变量的引用。 1[1] id() 2、我们对变量的修改，就是对引用的修改；调用函数时传递的参数，就是实参保存数据的引用，返回值同样是。3、关于对数据类型的分类：不可变类型（数字类，字符串，元组）、可变类型（列表，字典）。他们的区别是一个内容可以改变，一个内容可以通过方法调用的方式改变。4、为什么字典类型的key只能是不可变类型？ 答：字典在存储数据是会调用内部的hash(o)函数，通过key所返回的特征码来决定如何存储，而hash(o)函数只能传入不可变类型，所以字典的key也只能是不可变类型。5、这里想总结一下函数、方法、关键词的区别：函数封装了独立的功能，直接调用；方法则是对对象的操作，需要通过 对象.方法名() 的方式来调用；关键词使用时连括号都不用。2019.8.11、在函数中，我们不能对全局变量进行直接修改，想要修改就必须在函数中使用关键字global进行声明。2、元组可以作为函数的返回值，此时可以省略括号。接受时可以用相同数量的变量来接受元组。Python中有一个非常有趣的方法来交换两个变量的数值。 1a, b = b, a 3、针对参数，在函数内部的赋值不会影响外部的实参，假如参数是可变类型，可以通过调用方法来直接修改内容。4、针对列表，+=相当于调用了extand()方法。 12list = [1, 2, 3]list += [4] # 相当于 list.extend([4]) 附录https://www.bilibili.com/video/av14184325/]]></content>
  </entry>
  <entry>
    <title><![CDATA[我的第一篇博客文章]]></title>
    <url>%2F2019%2F07%2F27%2F%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F07%2F27%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
